import React from 'react';
import classes from './MyButton.module.css'

const MyButton = ({children, ...props}) => {
    return (
        // Очень полезный способ передачи пропсов из корневого файла (где прописана кнопка) через указание {...props}. Теперь, всё что мы
        // укажем в App.js в свойствах кнопки <MyButton (любое свойство, например desabled для проверки), будет корректро отрабатывать.
        // Подобный подход к созданию стилей через модули хорош тем, что позволяет получать изолированные модули по примеру методологии БЭМ
        // и добиваться абсолютно корректного применения стилей там где они должны быть применены. Образно говоря, если есть, например,
        // всплывающее окно и раскрывающийся список и оба имеют класс active, то при не очень правильном подходе к формированию стилей, 
        // эти два разных блока могут работать либо вместе (оба раскрылись и оба закрылись), либо вообще не раскрываться и не закрываться и т.д.
        // а данная, модульная, методология, если посмотреть в DOM, автоматически именует модули по типу БЭМ (уникальное классовое название), 
        // что и позволяет добиться изоляции.
        <button {...props} className={classes.myBtn}>
            {children}
        </button>
    );
};

export default MyButton;